Developers contribute to different technical and non-technical tasks throughout the software development life cycle, such as implementing and refactoring code, reviewing changes, documenting, testing, communicating, and collaborating. Contribution assessment research can help understand development phenomena better, motivate developers, and improve software engineering projects in industrial, open-source, and academic settings. As the body of work grows, it becomes worthwhile to aggregate evidence to standardize classifications, consolidate findings, and identify research gaps. This paper characterizes how software engineering research has studied developersâ€™ contributions to projects. We conducted a systematic mapping study of 166 primary papers that assessed developer contributions characterizing the contribution types, research topics, research design practices, measurement constructs, assessment approaches, contexts under study, threats to validity, and challenges. Our findings show that contribution research is broad in software engineering but mainly focused on product-related contributions that mine measures from activities. Yet, research needs to consider more comprehensive construct measures and robust approaches to recognize the multi-faceted, nuanced, and complex nature of development work, without overlooking contributions. At the same time, there is a need for approach applicability to help future research and technology transfer. Researchers, tool designers, and adopters can leverage our results to motivate future software contribution-related work.