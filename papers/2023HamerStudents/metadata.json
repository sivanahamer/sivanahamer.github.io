{
    "title": "Students' perceptions' of integrating a contribution measurement tool in software engineering projects",
    "link": "https://ieeexplore.ieee.org/document/10229405",
    "authors": ["SH", "CQL", "MJ"],
    "year": 2023,
    "venue": "CSEE&T",
    "keywords": ["measurement tool", "code contributions", "assessment", "empirical software engineering", "software engineering education"],
    "isSlides": true,
    "material": "https://zenodo.org/records/8075646",
    "abstract": "Measuring developers' and teams' contributions in project-based software engineering courses is challenging. Instructors require measurement tools to identify early improvement opportunities and simplify the assessment of students' contributions to projects. Besides, students could appreciate detailed, timely, and valuable feedback that encapsulates the multi-faceted nature of their contribution to improve their skills. With the rise of software repositories, data-driven tools that mine and visualize repository data have been proposed to help assess and improve software engineering courses. Still, little is known about students' perceptions of integrating these tools to measure project contributions. This paper analyzes students' perceptions of integrating a contribution measurement tool in agile software engineering projects. We collected the perceptions of 65 undergraduate students developing projects through a mixed-method approach. Our results show several benefits of using these tools in software engineering courses, providing valuable feedback, intending to use such tools in projects, and facilitating timely and helpful feedback. Additionally, students described the benefits of nine agile practices, including coding standards, reviews and inspections, and planning games. These tools were perceived as useful, easy to use, and intended to be used in future projects. Six challenges for integrating these tools in a course setting related to adoption, learning curves, configuration issues, measurement completeness, team dynamics, and Goodhart's law were found. Our results showed the acceptance and utility of such tools to aid students in software engineering projects."
}